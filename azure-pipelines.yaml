trigger:
  branches:
    include:
      - feature/**
      - main
      - uat

pool:
  vmImage: 'ubuntu-latest'

variables:
  pythonVersion: '3.13'

pr:
  branches:
    include:
      - main
      - uat

jobs:
  - job: HelloWorld
    displayName: 'Hello World Job'
    steps:
      - script: echo "Hello, World!"
        displayName: 'Check Pipeline Trigger'
      - script: |
          echo "Source Branch: $(Build.SourceBranch)"
        displayName: 'Display Source Branch'

  - job: ValidateSourceBranch
    displayName: 'Validate Source Branch'
    dependsOn: HelloWorld
    condition: and(succeeded('HelloWorld'), eq(variables['Build.Reason'], 'PullRequest'))
    steps:
      - script: |
          echo 'Checking source branch'
          echo "Source branch: $SOURCE_BRANCH"
          echo "Target branch: $TARGET_BRANCH"
          
          SOURCE=$(echo $SOURCE_BRANCH | sed 's|refs/heads/||')
          TARGET=$(echo $TARGET_BRANCH | sed 's|refs/heads/||')

          if [ "$TARGET" = "main" ] && [ "$SOURCE" != "uat" ]; then
            echo "❌ Source branch must be UAT when target branch is main."
            exit 1
          else
            echo "✅ Source branch and Target branch are valid."
          fi
        displayName: 'Check Source Branch Validity'
        env:
          SOURCE_BRANCH: $(System.PullRequest.SourceBranch)
          TARGET_BRANCH: $(System.PullRequest.TargetBranch)


  - job: Build
    dependsOn: ValidateSourceBranch
    condition: |
          or(
            and(
              eq(variables['Build.Reason'], 'PullRequest'),
              succeeded('ValidateSourceBranch')
            ),
            ne(variables['Build.Reason'], 'PullRequest')
          )
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(pythonVersion)'
        displayName: 'Set up Python: $(pythonVersion)'

      - script: |
          sudo apt-get update
          sudo apt-get upgrade -y
        displayName: 'Update System Packages'

      - task: CopyFiles@2
        displayName: 'Copy Source and Test Directories'
        inputs:
          SourceFolder: '.'
          Contents: |
            src/**
            tests/**
          TargetFolder: '$(Build.SourcesDirectory)'

      - script: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
        displayName: 'Install Python Package Dependencies'

      - script: |
          curl -sSL -O https://packages.microsoft.com/config/ubuntu/$(grep VERSION_ID /etc/os-release | cut -d '"' -f 2)/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install msodbcsql18 -y
        displayName: 'Install Microsoft ODBC 18'
      
      - script: |
          ip addr show | grep "inet " | awk '{print $2}' | cut -d'/' -f1
        displayName: 'Show IP Woolie Test'
  
      # - script: |
      #     source venv/bin/activate
      #     cd "$(Build.SourcesDirectory)" # Change directory to the copied source
      #     pytest tests/utility/test_utility.py
      #   displayName: 'Run Pytest for utility mainly SQL connection'
